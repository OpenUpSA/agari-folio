@folio = http://localhost:5000


@realm = agari
@client_id = dms
@client_secret = VDyLEjGR3xDQvoQlrHq5AB6OwbW0Refc

# @username = system.admin@agari.tech
@username = owner@org1.ac.za
# @username = owner@org2.ac.za
# @username = org-admin@org1.ac.za
# @username = org-admin@org2.ac.za
# @username = test-user1@example.com
# @username = test-user2@example.com
# @username = test-user3@example.com


@password = pass123


### 1. LOGIN to get access token
# @name login
POST http://keycloak.local/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username={{username}}
&password={{password}}
&grant_type=password
&client_id={{client_id}}
&client_secret={{client_secret}}

###
@token = {{login.response.body.access_token}}

##########################
### INFO
##########################

# @name health
GET {{folio}}/info/health

###

# @name databaseHealth
GET {{folio}}/info//health/db

###

# @name whoami
GET {{folio}}/info/whoami
Authorization: Bearer {{token}}

###

# @name permissions
GET {{folio}}/info/permissions
Authorization: Bearer {{token}}

###

# @name userHasResourcePermission

POST {{folio}}/info/permissions/check
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "permission": "view_org_private_projects",
    "resource_type": "project",
    "resource_id": "80bd4fd2-10e3-4104-abe2-713dfdd92bfa"
}


###

# @name check_permission
GET {{folio}}/info/permissions/check/view_org_private_projects
Authorization: Bearer {{token}}

##########################
### PATHOGENS
##########################

# @name list_pathogens
GET {{folio}}/pathogens

###

# @name list_pathogens_deleted
GET {{folio}}/pathogens?deleted=true

###

# @name create_pathogen
POST {{folio}}/pathogens
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "Cholera2",
    "description": "Cholera Virus2",
    "scientific_name": "Vibrio cholerae2"
}

###

@pathogen_id = 0683f0f6-04b3-4005-a078-383d0e3e88f2

# @name get_pathogen
GET {{folio}}/pathogens/{{pathogen_id}}

###

# @name delete_pathogen
DELETE {{folio}}/pathogens/{{pathogen_id}}
Authorization: Bearer {{token}}

###

# @name delete_pathogen_hard
DELETE {{folio}}/pathogens/{{pathogen_id}}?hard=true
Authorization: Bearer {{token}}

###

# @update_pathogen
PUT {{folio}}/pathogens/{{pathogen_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "Cholera",
    "description": "Cholera virus",
    "scientific_name": "Vibrio cholerae"
}

###

# @name restore_pathogen
POST {{folio}}/pathogens/{{pathogen_id}}/restore
Authorization: Bearer {{token}}

##########################
### PROJECTS
##########################

# @name list_projects
GET {{folio}}/projects
Authorization: Bearer {{token}}

###

# @name create_project
POST {{folio}}/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "Cholera Project",
    "description": "Project description",
    "pathogen_id": "{{pathogen_id}}",
    "privacy": "public"
}

###

@project_id = 8772fbeb-5c94-41d6-8159-48290874378b

### @name get_project
GET {{folio}}/projects/{{project_id}}
Authorization: Bearer {{token}}

###

# @name update_project
PUT {{folio}}/projects/{{project_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "privacy": "public"
}

###

# @name delete_project
DELETE {{folio}}/projects/{{project_id}}
Authorization: Bearer {{token}}

###

# @name delete_project_hard
DELETE {{folio}}/projects/{{project_id}}?hard=true
Authorization: Bearer {{token}}

###

# @name restore_project
POST {{folio}}/projects/{{project_id}}/restore
Authorization: Bearer {{token}}

##########################
### PROJECT USERS
##########################

# @name list_project_users
GET {{folio}}/projects/{{project_id}}/users
Authorization: Bearer {{token}}

###

# @name add_project_users
POST {{folio}}/projects/{{project_id}}/users
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "user_id": "282dd9ee-ad7e-4580-9677-fa37d7ba6435",
    "role": "project-contributor"
}

###

@user_id = 282dd9ee-ad7e-4580-9677-fa37d7ba6435

# @name delete_project_users
DELETE {{folio}}/projects/{{project_id}}/users/{{user_id}}
Authorization: Bearer {{token}}


##########################
### STUDIES
##########################

# @name list_studies
GET {{folio}}/studies
Authorization: Bearer {{token}}

###

@study_id = study-001

# @name create_study
POST {{folio}}/studies
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "studyId": "{{study_id}}",
    "name": "AGARI Test Study", 
    "description": "Test study for genomic data workflow",
    "projectId": "{{project_id}}",
    "info": {
        "projectType": "genomics",
        "region": "South Africa"
    }
}

### 

# @name get_studies_in_song
GET http://song.local/studies/all
Authorization: Bearer {{token}}


###

# @name get_study_in_song
GET http://song.local/studies/{{study_id}}
Authorization: Bearer {{token}}

###

# @name submitAnalysis
POST {{folio}}/studies/submit/{{study_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "studyId": "study-001",
  "analysisId": "analysis001",
  "analysisType": {
    "name": "sequencingRead",
    "version": 1
  },
  "samples": [
    {
      "sampleId": "SA001",
      "submitterSampleId": "SA001",
      "sampleType": "Total DNA",
      "matchedNormalSubmitterSampleId": null,
      "specimen": {
        "specimenId": "SP001", 
        "submitterSpecimenId": "SP001",
        "specimenType": "Normal",
        "specimenTissueSource": "Blood derived",
        "tumourNormalDesignation": "Normal"
      },
      "donor": {
        "studyId": "study-001",
        "donorId": "D001",
        "submitterDonorId": "D001",
        "gender": "Female"
      }
    }
  ],
  "files": [
    {
      "fileName": "test_data.fasta",
      "fileType": "FASTA",
      "fileSize": 298,
      "fileMd5sum": "cc70b8e811b39c98a938edf87145e34d",
      "fileAccess": "open",
      "dataType": "Sequencing Reads"
    }
  ],
  "experiment": {
    "libraryStrategy": "WGS",
    "pairedEnd": false,
    "aligned": false
  }
}

###

@analysis_id = 6920dac0-52c5-42be-a0da-c052c542be33

# @name get_study_analyses_by_id
GET http://song.local/studies/{{study_id}}/analysis/{{analysis_id}}
Authorization: Bearer {{token}}

###

# @name list_study_analyses
GET http://song.local/studies/{{study_id}}/analysis?analysisStates=PUBLISHED,UNPUBLISHED
Authorization: Bearer {{token}}

###

@object_id_from_analysis = baa3143a-4d69-5d4a-975f-b0ae20216a91

# @name upload_analysis_file
POST {{folio}}/studies/{{study_id}}/analysis/{{analysis_id}}/upload
Content-Type: multipart/form-data
Authorization: Bearer {{token}}

object_id=baa3143a-4d69-5d4a-975f-b0ae20216a91
overwrite=true
file=< ./test/test_data.fasta





# ### 5.1a. PUBLISH ANALYSIS 
# PUT http://song.local/studies/{{study_id}}/analysis/publish/{{analysis_id}}
# Authorization: Bearer {{token}}

# ### 5.1b. UNPUBLISH ANALYSIS
# PUT http://song.local/studies/{{study_id}}/analysis/unpublish/{{analysis_id}}
# Authorization: Bearer {{token}}

# ### 5.2b. GET ANALYSIS DETAILS
# # Extract analysis_id from step 4 response and get full analysis details
# # @name getAnalysis
# GET http://song.local/studies/{{study_id}}/analysis/{{analysis_id}}
# Authorization: Bearer {{token}}
